"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = void 0;
const utils_1 = require("../utils");
const path_1 = require("path");
const mkdirp_1 = require("mkdirp");
const t = __importStar(require("@babel/types"));
const generator_1 = __importDefault(require("@babel/generator"));
//@ts-ignore
const package_json_1 = __importDefault(require("../../package.json"));
const files_1 = require("../utils/files");
const version = process.env.NODE_ENV === 'test' ? 'latest' : package_json_1.default.version;
const plugin = (builder) => {
    if (!builder.options.bundle.enabled) {
        return;
    }
    // finally, write one index file with all files, exported
    const indexFile = 'index.ts';
    const indexOutFile = (0, path_1.join)(builder.outPath, indexFile);
    const stmts = builder.files.map(file => t.exportAllDeclaration(t.stringLiteral((0, utils_1.getRelativePath)(indexFile, file, builder.options.restoreImportExtension))));
    const finalAst = t.program(stmts);
    const indexContent = (0, generator_1.default)(finalAst).code;
    mkdirp_1.mkdirp.sync((0, path_1.dirname)(indexOutFile));
    const header = `/**
  * This file and any referenced files were automatically generated by ${package_json_1.default.name}@${version}
  * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain
    * and run the transpile command or npm scripts command that is used to regenerate this bundle.
  */
 \n`;
    (0, files_1.writeContentToFile)(builder.outPath, builder.options, header + indexContent, indexOutFile);
};
exports.plugin = plugin;
