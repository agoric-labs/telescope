// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Akash 1`] = `
{
  "Msg": {
    "comment": "Msg defines the deployment Msg service.",
    "methods": {
      "CloseDeployment": {
        "comment": "CloseDeployment defines a method to close a deployment given proper inputs.",
        "fields": {
          "id": {
            "comment": null,
            "id": 1,
            "import": "akash/deployment/v1beta2/deployment.proto",
            "importedName": "akash.deployment.v1beta2.DeploymentID",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.customname)": "ID",
              "(gogoproto.jsontag)": "id",
              "(gogoproto.moretags)": "yaml:id",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "id",
              "(telescope:name)": "id",
              "(telescope:orig)": "id",
            },
            "parsedType": {
              "name": "DeploymentID",
              "type": "Type",
            },
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "DeploymentID",
          },
        },
        "info": undefined,
        "name": "CloseDeployment",
        "options": undefined,
        "requestType": "MsgCloseDeployment",
        "responseType": "MsgCloseDeploymentResponse",
        "type": "ServiceMethod",
      },
      "CloseGroup": {
        "comment": "CloseGroup defines a method to close a group of a deployment given proper inputs.",
        "fields": {
          "id": {
            "comment": null,
            "id": 1,
            "import": "akash/deployment/v1beta2/groupid.proto",
            "importedName": "akash.deployment.v1beta2.GroupID",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.customname)": "ID",
              "(gogoproto.jsontag)": "id",
              "(gogoproto.moretags)": "yaml:id",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "id",
              "(telescope:name)": "id",
              "(telescope:orig)": "id",
            },
            "parsedType": {
              "name": "GroupID",
              "type": "Type",
            },
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "GroupID",
          },
        },
        "info": undefined,
        "name": "CloseGroup",
        "options": undefined,
        "requestType": "MsgCloseGroup",
        "responseType": "MsgCloseGroupResponse",
        "type": "ServiceMethod",
      },
      "CreateDeployment": {
        "comment": "CreateDeployment defines a method to create new deployment given proper inputs.",
        "fields": {
          "deposit": {
            "comment": null,
            "id": 4,
            "import": "cosmos/base/v1beta1/coin.proto",
            "importedName": "cosmos.base.v1beta1.Coin",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.jsontag)": "deposit",
              "(gogoproto.moretags)": "yaml:deposit",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "deposit",
              "(telescope:name)": "deposit",
              "(telescope:orig)": "deposit",
            },
            "parsedType": {
              "name": "Coin",
              "type": "Type",
            },
            "scope": [
              "cosmos.base.v1beta1",
            ],
            "scopeType": "protoImport",
            "type": "cosmos.base.v1beta1.Coin",
          },
          "depositor": {
            "comment": "Depositor pays for the deposit",
            "id": 5,
            "isScalar": true,
            "options": {
              "(gogoproto.jsontag)": "depositor",
              "(gogoproto.moretags)": "yaml:depositor",
              "(telescope:camel)": "depositor",
              "(telescope:name)": "depositor",
              "(telescope:orig)": "depositor",
            },
            "parsedType": {
              "name": "string",
              "type": "native",
            },
            "type": "string",
            "typeNum": 13,
          },
          "groups": {
            "comment": null,
            "id": 2,
            "import": "akash/deployment/v1beta2/groupspec.proto",
            "importedName": "akash.deployment.v1beta2.GroupSpec",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.jsontag)": "groups",
              "(gogoproto.moretags)": "yaml:groups",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "groups",
              "(telescope:name)": "groups",
              "(telescope:orig)": "groups",
            },
            "parsedType": {
              "name": "GroupSpec",
              "type": "Type",
            },
            "rule": "repeated",
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "GroupSpec",
          },
          "id": {
            "comment": null,
            "id": 1,
            "import": "akash/deployment/v1beta2/deployment.proto",
            "importedName": "akash.deployment.v1beta2.DeploymentID",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.customname)": "ID",
              "(gogoproto.jsontag)": "id",
              "(gogoproto.moretags)": "yaml:id",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "id",
              "(telescope:name)": "id",
              "(telescope:orig)": "id",
            },
            "parsedType": {
              "name": "DeploymentID",
              "type": "Type",
            },
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "DeploymentID",
          },
          "version": {
            "comment": null,
            "id": 3,
            "isScalar": true,
            "options": {
              "(gogoproto.jsontag)": "version",
              "(gogoproto.moretags)": "yaml:version",
              "(telescope:camel)": "version",
              "(telescope:name)": "version",
              "(telescope:orig)": "version",
            },
            "parsedType": {
              "name": "bytes",
              "type": "native",
            },
            "type": "bytes",
            "typeNum": 14,
          },
        },
        "info": undefined,
        "name": "CreateDeployment",
        "options": undefined,
        "requestType": "MsgCreateDeployment",
        "responseType": "MsgCreateDeploymentResponse",
        "type": "ServiceMethod",
      },
      "DepositDeployment": {
        "comment": "DepositDeployment deposits more funds into the deployment account",
        "fields": {
          "amount": {
            "comment": null,
            "id": 2,
            "import": "cosmos/base/v1beta1/coin.proto",
            "importedName": "cosmos.base.v1beta1.Coin",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.jsontag)": "amount",
              "(gogoproto.moretags)": "yaml:amount",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "amount",
              "(telescope:name)": "amount",
              "(telescope:orig)": "amount",
            },
            "parsedType": {
              "name": "Coin",
              "type": "Type",
            },
            "scope": [
              "cosmos.base.v1beta1",
            ],
            "scopeType": "protoImport",
            "type": "cosmos.base.v1beta1.Coin",
          },
          "depositor": {
            "comment": "Depositor pays for the deposit",
            "id": 3,
            "isScalar": true,
            "options": {
              "(gogoproto.jsontag)": "depositor",
              "(gogoproto.moretags)": "yaml:depositor",
              "(telescope:camel)": "depositor",
              "(telescope:name)": "depositor",
              "(telescope:orig)": "depositor",
            },
            "parsedType": {
              "name": "string",
              "type": "native",
            },
            "type": "string",
            "typeNum": 13,
          },
          "id": {
            "comment": null,
            "id": 1,
            "import": "akash/deployment/v1beta2/deployment.proto",
            "importedName": "akash.deployment.v1beta2.DeploymentID",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.customname)": "ID",
              "(gogoproto.jsontag)": "id",
              "(gogoproto.moretags)": "yaml:id",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "id",
              "(telescope:name)": "id",
              "(telescope:orig)": "id",
            },
            "parsedType": {
              "name": "DeploymentID",
              "type": "Type",
            },
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "DeploymentID",
          },
        },
        "info": undefined,
        "name": "DepositDeployment",
        "options": undefined,
        "requestType": "MsgDepositDeployment",
        "responseType": "MsgDepositDeploymentResponse",
        "type": "ServiceMethod",
      },
      "PauseGroup": {
        "comment": "PauseGroup defines a method to close a group of a deployment given proper inputs.",
        "fields": {
          "id": {
            "comment": null,
            "id": 1,
            "import": "akash/deployment/v1beta2/groupid.proto",
            "importedName": "akash.deployment.v1beta2.GroupID",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.customname)": "ID",
              "(gogoproto.jsontag)": "id",
              "(gogoproto.moretags)": "yaml:id",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "id",
              "(telescope:name)": "id",
              "(telescope:orig)": "id",
            },
            "parsedType": {
              "name": "GroupID",
              "type": "Type",
            },
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "GroupID",
          },
        },
        "info": undefined,
        "name": "PauseGroup",
        "options": undefined,
        "requestType": "MsgPauseGroup",
        "responseType": "MsgPauseGroupResponse",
        "type": "ServiceMethod",
      },
      "StartGroup": {
        "comment": "StartGroup defines a method to close a group of a deployment given proper inputs.",
        "fields": {
          "id": {
            "comment": null,
            "id": 1,
            "import": "akash/deployment/v1beta2/groupid.proto",
            "importedName": "akash.deployment.v1beta2.GroupID",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.customname)": "ID",
              "(gogoproto.jsontag)": "id",
              "(gogoproto.moretags)": "yaml:id",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "id",
              "(telescope:name)": "id",
              "(telescope:orig)": "id",
            },
            "parsedType": {
              "name": "GroupID",
              "type": "Type",
            },
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "GroupID",
          },
        },
        "info": undefined,
        "name": "StartGroup",
        "options": undefined,
        "requestType": "MsgStartGroup",
        "responseType": "MsgStartGroupResponse",
        "type": "ServiceMethod",
      },
      "UpdateDeployment": {
        "comment": "UpdateDeployment defines a method to update a deployment given proper inputs.",
        "fields": {
          "id": {
            "comment": null,
            "id": 1,
            "import": "akash/deployment/v1beta2/deployment.proto",
            "importedName": "akash.deployment.v1beta2.DeploymentID",
            "isNestedMsg": false,
            "options": {
              "(gogoproto.customname)": "ID",
              "(gogoproto.jsontag)": "id",
              "(gogoproto.moretags)": "yaml:id",
              "(gogoproto.nullable)": false,
              "(telescope:camel)": "id",
              "(telescope:name)": "id",
              "(telescope:orig)": "id",
            },
            "parsedType": {
              "name": "DeploymentID",
              "type": "Type",
            },
            "scope": [
              "akash.deployment.v1beta2",
            ],
            "scopeType": "protoImport",
            "type": "DeploymentID",
          },
          "version": {
            "comment": null,
            "id": 3,
            "isScalar": true,
            "options": {
              "(gogoproto.jsontag)": "version",
              "(gogoproto.moretags)": "yaml:version",
              "(telescope:camel)": "version",
              "(telescope:name)": "version",
              "(telescope:orig)": "version",
            },
            "parsedType": {
              "name": "bytes",
              "type": "native",
            },
            "type": "bytes",
            "typeNum": 14,
          },
        },
        "info": undefined,
        "name": "UpdateDeployment",
        "options": undefined,
        "requestType": "MsgUpdateDeployment",
        "responseType": "MsgUpdateDeploymentResponse",
        "type": "ServiceMethod",
      },
    },
    "name": "Msg",
    "type": "Service",
  },
}
`;
